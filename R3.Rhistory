install.packages("caret")
library(caret)
install.packages("rpart")
install.packages("rpart")
library(rpart)
install.packages("rpart.plot")
library(rpart.plot)
install.packages("RColorBrewer")
library(RColorBrewer)
install.packages("randomForest")
library(randomForest)
install.packages("rattle")
library(rattle)
install.packages("corrplot")
library(corrplot)
install.packages("gbm")
library(gbm)



train_in <- read.csv('./pml-training.csv', header=T)
valid_in <- read.csv('./pml-testing.csv', header=T)
dim(train_in)
dim(valid_in)
trainData<- train_in[, colSums(is.na(train_in)) == 0]
validData <- valid_in[, colSums(is.na(valid_in)) == 0]
dim(trainData)
dim(validData)
trainData <- trainData[, -c(1:7)]
validData <- validData[, -c(1:7)]
dim(trainData)
dim(validData)
set.seed(1234)
inTrain <- createDataPartition(trainData$classe, p = 0.7, list = FALSE)
trainData <- trainData[inTrain, ]
testData <- trainData[-inTrain, ]
dim(trainData)
NZV <- nplot(cmtree$table, col = cmtree$byClass, 
     main = paste("Decision Tree - Accuracy =", round(cmtree$overall['Accuracy'], 4)))earZeroVar(trainData)
trainData <- trainData[, -NZV]
testData  <- testData[, -NZV]
dim(trainData)
dim(testData)
install.packages("corrplot")
library(corrplot)
cor_mat <- cor(trainData[, -53])
corrplot(cor_mat, order = "FPC", method = "color", type = "upper",
tl.cex = 0.8, tl.col = rgb(0, 0, 0))
highlyCorrelated = findCorrelation(cor_mat, cutoff=0.75)
names(trainData)[highlyCorrelated]
install.packages("rpart")
library(rpart)
install.packages("rpart.plot")
library(rpart.plot)
set.seed(12345)
decisionTreeMod1 <- rpart(classe ~ ., data=trainData, method="class")
fancyRpartPlot(decisionTreeMod1)
View(decisionTreeMod1)

> decisionTreeMod1[["parms"]]

> library(e1071)
> predictTreeMod1 <- predict(decisionTreeMod1, testData, type = "class")
> cmtree <- confusionMatrix(predictTreeMod1, testData$classe)

> cmtree

plot(cmtree$table, col = cmtree$byClass, 
     main = paste("Decision Tree - Accuracy =", round(cmtree$overall['Accuracy'], 4)))
     
> install.packages("caret")
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
> controlRF <- trainControl(method="cv", number=3)
model_RF <- train(classe~., data=trainData, method="rf", trControl=controlRF, verbose=FALSE)
print(model_RF)
plot(model_RF,main="Accuracy Rate of RFMA with predictors")
 trainpred <- predict(model_RF,newdata=testData)
> confMatRF <- confusionMatrix(testData$classe,trainpred)
> confMatRF$table
confMatRF$overall[1]
names(model_RF$finalModel)
> model_RF$finalModel$classes
plot(model_RF,main="Accuracy Rate of RFMA with predictors")

 plot(model_RF$finalModel,main="Error of RFMA with  trees")

model_GBM <- train(classe~., data=trainData, method="gbm", trControl=trControl, verbose=FALSE)
> print(model_GBM)
> plot(model_GBM)
> trainpred <- predict(model_GBM,newdata=testData)
> confMatGBM <- confusionMatrix(testData$classe,trainpred)
> confMatGBM$table
 confMatGBM$overall[1]
 > FinalPred <- predict(model_RF,newdata=validData)
> FinalPred

